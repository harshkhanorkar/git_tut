import pandas as pd

def process_pl_review(file_path):
    """
    Reads an Excel file, dynamically adds YTD, Percentage of Variance, and CFO Commentary columns 
    to all sheets, performs necessary calculations, and saves the updated file.
    
    Parameters:
        file_path (str): The path to the input Excel file.
    
    Returns:
        str: Path of the updated Excel file.
    """
    # Load the Excel file
    xls = pd.ExcelFile(file_path)

    # Create an output file name
    output_file = "Updated_" + file_path.split("/")[-1]

    # Create an Excel writer object
    with pd.ExcelWriter(output_file, engine="xlsxwriter") as writer:
        for sheet_name in xls.sheet_names:
            # Read the sheet
            df = pd.read_excel(xls, sheet_name=sheet_name)

            # Identify numeric (month) columns dynamically
            month_columns = df.select_dtypes(include=['number']).columns.tolist()

            if len(month_columns) < 2:
                print(f"Skipping sheet '{sheet_name}' (Not enough month columns)")
                continue  # Skip sheets without enough data

            # Compute YTD (Last Month - Second Last Month)
            df["YTD"] = df[month_columns[-1]] - df[month_columns[-2]]

            # Compute Percentage of Variance (YTD / Last Month) * 100
            df["Percentage of variance"] = (df["YTD"] / df[month_columns[-1]]) * 100

            # Handle division by zero & NaN cases
            df["Percentage of variance"].replace([float("inf"), -float("inf")], 0, inplace=True)
            df["Percentage of variance"].fillna(0, inplace=True)

            # Add an empty CFO Commentary column
            df["CFO Commentary"] = ""

            # Save updated sheet
            df.to_excel(writer, sheet_name=sheet_name, index=False)

    print(f"Updated file saved as {output_file}")
    return output_file  # Return the output file path

# Example usage:
# process_pl_review("P&L Review_ Working File_3rd Mar 2025.xlsx")

